import{_ as i,a as e,b as a}from"./readme_h-CwwnYu-_.js";import{_ as n,a as l}from"./user_read_archives_dark-Cg_qp2GV.js";import{_ as t,j as r,m as h,o as d}from"./app-Ddffynhy.js";const o={};function p(c,s){return d(),r("div",null,s[0]||(s[0]=[h(`<h1 id="预览设置" tabindex="-1"><a class="header-anchor" href="#预览设置"><span>预览设置</span></a></h1><h2 id="文本类型" tabindex="-1"><a class="header-anchor" href="#文本类型"><span><strong>文本类型</strong></span></a></h2><p>要作为文本预览的文件扩展名，用 <code>,</code> 分隔，例如 <code>txt,md,go,tsx</code>。</p><h2 id="音频类型" tabindex="-1"><a class="header-anchor" href="#音频类型"><span><strong>音频类型</strong></span></a></h2><p>要作为音频预览的文件扩展名，以 <code>,</code> 分隔，例如 <code>mp3,wav,m4a</code>。</p><h2 id="视频类型" tabindex="-1"><a class="header-anchor" href="#视频类型"><span><strong>视频类型</strong></span></a></h2><p>要作为视频预览的文件扩展名，以 <code>,</code> 分隔，例如 <code>mp4,webm,ogg</code>。</p><h2 id="图片类型" tabindex="-1"><a class="header-anchor" href="#图片类型"><span><strong>图片类型</strong></span></a></h2><p>要作为图像预览的文件扩展名，以 <code>,</code> 分隔，例如 <code>jpg,jpeg,png,gif,webp</code>。</p><h2 id="代理类型" tabindex="-1"><a class="header-anchor" href="#代理类型"><span><strong>代理类型</strong></span></a></h2><p>要通过程序代理下载的文件扩展名</p><h2 id="代理忽略头部" tabindex="-1"><a class="header-anchor" href="#代理忽略头部"><span><strong>代理忽略头部</strong></span></a></h2><p>详情查看： <strong><a href="https://github.com/alist-org/alist/issues/2763" target="_blank" rel="noopener noreferrer">https://github.com/alist-org/alist/issues/2763</a></strong></p><h2 id="外部预览" tabindex="-1"><a class="header-anchor" href="#外部预览"><span><strong>外部预览</strong></span></a></h2><p>一个包含外部预览设置的 json 对象，定义为</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  [</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">extensions</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //(url)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一个key <code>extensions</code> 是用 <code>,</code> 分割的文件扩展名（如果是 startsWith<code>/</code> 会被认为是正则表达式），value 也是一个 <code>key-value</code> 对象，key 是 预览名称，值为外部网址。</p><p>对于外部 url，我们提供了一些变量供您使用：</p><p>基础变量：</p><ul><li><code>$url</code>: the file url</li><li><code>$durl</code>: the file of alist URL</li><li><code>$name</code>: the file name</li></ul><p>拓展变量：<br> 在基础变量前添加[eb_]，其中e表示<code>encodeURIComponent</code>，b表示<code>base64</code>， 如</p><ul><li><code>$e_url</code>: encodeURIComponent($url)</li><li><code>$b_url</code>: btoa($url)</li><li><code>$eb_url</code>: encodeURIComponent(btoa($url))</li></ul><p>最后，当当前文件与“扩展”匹配时，“外部预览”将显示“打开方式”菜单。</p><p>例如，将“外部预览”设置为</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;txt&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;Notepad&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;notepad://$url&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;/.*/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;VSCode&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;vscode://$url&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当我们输入一个扩展名为 <code>txt</code> 的文件时，它会显示：</p><p><img src="`+i+`" alt="Open-with" loading="lazy"></p><h2 id="iframe-预览" tabindex="-1"><a class="header-anchor" href="#iframe-预览"><span><strong>iframe 预览</strong></span></a></h2><p>类似于 <code>External previews</code>，但它会直接在当前页面中嵌入 iframe。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果你想使用自部署的onlyoffice预览office文件，可以在这里添加如下配置：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;doc,docx,xls,xlsx,ppt,pptx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;OnlyOffice&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;you_only_office_url&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>部署和使用 <code>OnlyOffice</code> 参考：</p><ul><li><a href="https://github.com/AlistGo/alist/discussions/3255" target="_blank" rel="noopener noreferrer">https://github.com/AlistGo/alist/discussions/3255</a></li><li><a href="https://github.com/AlistGo/alist/discussions/8271" target="_blank" rel="noopener noreferrer">https://github.com/AlistGo/alist/discussions/8271</a></li></ul></div><h2 id="音频封面" tabindex="-1"><a class="header-anchor" href="#音频封面"><span><strong>音频封面</strong></span></a></h2><p>歌曲无播放封面时显示的默认封面。</p><h2 id="自动播放音频" tabindex="-1"><a class="header-anchor" href="#自动播放音频"><span><strong>自动播放音频</strong></span></a></h2><p>是否自动播放音频文件。</p><h2 id="自动播放视频" tabindex="-1"><a class="header-anchor" href="#自动播放视频"><span><strong>自动播放视频</strong></span></a></h2><p>是否自动播放视频文件。</p><h2 id="打开压缩包文件时默认预览" tabindex="-1"><a class="header-anchor" href="#打开压缩包文件时默认预览"><span><strong>打开压缩包文件时默认预览</strong></span></a></h2><p>打开此选项后，默认会对压缩包格式文件进行预览(如下图所示)，会消耗一些服务器流量，但不会全部下载，如果要关闭压缩包格式首选预览，此选项关闭，首选项就是下载模式</p><p><img src="`+n+'" alt="" data-mode="lightmode-only" loading="lazy"></p><p><img src="'+l+'" alt="" data-mode="darkmode-only" loading="lazy"></p><h2 id="readme-自动渲染" tabindex="-1"><a class="header-anchor" href="#readme-自动渲染"><span><strong>Readme 自动渲染</strong></span></a></h2><p>关闭后 <code>readme.md</code>文件的内容将不会自动渲染在文件最底部</p><h2 id="过滤-readme-文件中的脚本" tabindex="-1"><a class="header-anchor" href="#过滤-readme-文件中的脚本"><span><strong>过滤 Readme 文件中的脚本</strong></span></a></h2><p>防止病毒脚本攻击，开启后会以文本形式显示 <code>readme.md</code> 内容，具体效果如下内容</p><ul><li>包含但不限于 删除线、表格、任务列表等以文本形式展示</li></ul><p><img src="'+e+'" alt="" data-mode="lightmode-only" loading="lazy"><br><img src="'+a+`" alt="" data-mode="darkmode-only" loading="lazy"></p><br><hr><h2 id="强制预览" tabindex="-1"><a class="header-anchor" href="#强制预览"><span><strong>强制预览</strong></span></a></h2><p>可以通过 <code>type</code> 请求参数来强制设置预览类型。</p><p>可选值:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>UNKNOWN</span></span>
<span class="line"><span>FOLDER</span></span>
<span class="line"><span>VIDEO</span></span>
<span class="line"><span>AUDIO</span></span>
<span class="line"><span>TEXT</span></span>
<span class="line"><span>IMAGE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例: <code>http://yourdomain/test-file.ahk?type=text</code></p>`,53)]))}const u=t(o,[["render",p]]),b=JSON.parse('{"path":"/zh/config/preview.html","title":"预览设置","lang":"zh-CN","frontmatter":{"icon":"iconfont icon-preview","order":7,"category":["Config"],"tag":["Config","Settings"],"sticky":true,"star":true},"headers":[{"level":2,"title":"文本类型","slug":"文本类型","link":"#文本类型","children":[]},{"level":2,"title":"音频类型","slug":"音频类型","link":"#音频类型","children":[]},{"level":2,"title":"视频类型","slug":"视频类型","link":"#视频类型","children":[]},{"level":2,"title":"图片类型","slug":"图片类型","link":"#图片类型","children":[]},{"level":2,"title":"代理类型","slug":"代理类型","link":"#代理类型","children":[]},{"level":2,"title":"代理忽略头部","slug":"代理忽略头部","link":"#代理忽略头部","children":[]},{"level":2,"title":"外部预览","slug":"外部预览","link":"#外部预览","children":[]},{"level":2,"title":"iframe 预览","slug":"iframe-预览","link":"#iframe-预览","children":[]},{"level":2,"title":"音频封面","slug":"音频封面","link":"#音频封面","children":[]},{"level":2,"title":"自动播放音频","slug":"自动播放音频","link":"#自动播放音频","children":[]},{"level":2,"title":"自动播放视频","slug":"自动播放视频","link":"#自动播放视频","children":[]},{"level":2,"title":"打开压缩包文件时默认预览","slug":"打开压缩包文件时默认预览","link":"#打开压缩包文件时默认预览","children":[]},{"level":2,"title":"Readme 自动渲染","slug":"readme-自动渲染","link":"#readme-自动渲染","children":[]},{"level":2,"title":"过滤 Readme 文件中的脚本","slug":"过滤-readme-文件中的脚本","link":"#过滤-readme-文件中的脚本","children":[]},{"level":2,"title":"强制预览","slug":"强制预览","link":"#强制预览","children":[]}],"git":{"createdTime":1662881160000,"updatedTime":1745426363000,"contributors":[{"name":"Noah Hsu","username":"Noah Hsu","email":"i@nn.ci","commits":3,"url":"https://github.com/Noah Hsu"},{"name":"flower_elf","username":"flower_elf","email":"47104993+flower-elf@users.noreply.github.com","commits":1,"url":"https://github.com/flower_elf"},{"name":"Chi_Tang","username":"Chi_Tang","email":"chitang@duck.com","commits":1,"url":"https://github.com/Chi_Tang"},{"name":"安稳","username":"安稳","email":"56105412+anwen-anyi@users.noreply.github.com","commits":4,"url":"https://github.com/安稳"},{"name":"zhanghaoxiang","username":"zhanghaoxiang","email":"85926883+balh55y@users.noreply.github.com","commits":1,"url":"https://github.com/zhanghaoxiang"},{"name":"Andy Hsu","username":"Andy Hsu","email":"i@nn.ci","commits":2,"url":"https://github.com/Andy Hsu"},{"name":"potoo","username":"potoo","email":"34411681+potoo0@users.noreply.github.com","commits":1,"url":"https://github.com/potoo"},{"name":"安稳","username":"安稳","email":"anwen_anyi@foxmail.com","commits":1,"url":"https://github.com/安稳"},{"name":"anwen","username":"anwen","email":"anwen_anyi@foxmail.com","commits":1,"url":"https://github.com/anwen"}]},"readingTime":{"minutes":2.52,"words":755},"filePathRelative":"zh/config/preview.md","localizedDate":"2022年9月11日"}');export{u as comp,b as data};
