import{_ as g,a as c,b as m}from"./ref_token-CWhitbal.js";import{_ as k,j as f,m as a,f as i,a as n,e as t,w as s,l as r,o as y}from"./app-Bl4GcpgC.js";const b={},x={id:"reference",tabindex:"-1"},v={class:"header-anchor",href:"#reference"};function w(A,e){const p=r("Badge"),h=r("RouteLink"),l=r("FlowChart"),u=r("Tabs");return y(),f("div",null,[e[14]||(e[14]=a('<h1 id="common" tabindex="-1"><a class="header-anchor" href="#common"><span>Common</span></a></h1><h2 id="mount-path" tabindex="-1"><a class="header-anchor" href="#mount-path"><span><strong>Mount Path</strong></span></a></h2><p>Unique identifier, the name displayed to the outside world, that is, the location to be mounted. If you want to mount to the root directory, it is <code>/</code></p><p><img src="'+g+'" alt="" data-mode="lightmode-only" loading="lazy"></p><p><img src="'+c+'" alt="" data-mode="darkmode-only" loading="lazy"></p><p>Repeated use of mount path name</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Failed create storage in database: UNIQUE constraint failed: x_storages.mount_path</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The mount path name is not filled in</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Key: &#39;Storage.MountPath&#39; Error:Field validation for &#39;MountPath&#39; failed on the &#39;required&#39; tag</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><br><h2 id="order" tabindex="-1"><a class="header-anchor" href="#order"><span><strong>Order</strong></span></a></h2><p>When there are multiple accounts, it is used for sorting, The smaller the more forward</p><br><h2 id="remark" tabindex="-1"><a class="header-anchor" href="#remark"><span><strong>Remark</strong></span></a></h2><p>Anything you want to fill in, which is just for reminding you what this storage is</p>',15)),i("h3",x,[i("a",v,[i("span",null,[e[0]||(e[0]=i("strong",null,"Reference",-1)),e[1]||(e[1]=t()),n(p,{text:"≥ 3.42.0",type:"info",vertical:"middle"})])])]),e[15]||(e[15]=a('<p>Reference authentication, tokens, etc. from <code>Mounted Storage</code>, and use the same token for multiple network disks</p><p>Currently only the following network disks are supported:</p><ul><li>139Yun</li><li>AliyundriveOpen</li><li>189CloudPC</li><li>123PanShare（ref 123Pan）</li><li>Cloudreve V3 / V4</li></ul><p>In the storage settings, set the first line of <code>Remark</code> to: <strong>ref:/mount path</strong></p><ul><li><a href="https://github.com/AlistGo/alist/pull/7805" target="_blank" rel="noopener noreferrer">https://github.com/AlistGo/alist/pull/7805</a></li></ul><p><img src="'+m+'" alt="" loading="lazy"></p><br><h2 id="enable-signing" tabindex="-1"><a class="header-anchor" href="#enable-signing"><span><strong>Enable signing</strong></span></a></h2><p>Sign and encrypt files (no password required), only valid for this driver, if other signatures are not enabled and <code>signature all</code> and <code>meta-information encryption</code> are not set, others will not be signed</p><p>Usage scenario: I don&#39;t want to enable all signatures, and I don&#39;t want to set metadata encryption. I just want to sign and encrypt a certain driver to prevent it from being scanned.</p><p>Scope of influence: <code>Settings--&gt;Global--&gt;Signature All</code> &gt; <code>Metainformation Directory Encryption</code> &gt; <code>Single Driver Signature</code></p><br><h2 id="disable-index" tabindex="-1"><a class="header-anchor" href="#disable-index"><span><strong>Disable index</strong></span></a></h2><p>Allow users to disable storage indexing.</p><ul><li>For example, if you enable <code>Ignore Index</code> in the index options, you no longer need to configure it after enabling <code>Disable Index</code>, which is more convenient.</li></ul><p><a href="https://github.com/AlistGo/alist/pull/7730" target="_blank" rel="noopener noreferrer">alist#7730</a>、<a href="https://github.com/AlistGo/alist-web/pull/219" target="_blank" rel="noopener noreferrer">alist-web#219</a></p><br><h3 id="cache-expiration" tabindex="-1"><a class="header-anchor" href="#cache-expiration"><span><strong>Cache Expiration</strong></span></a></h3><p>Cache time of directory structure.</p><br><h2 id="web-proxy" tabindex="-1"><a class="header-anchor" href="#web-proxy"><span><strong>Web proxy</strong></span></a></h2>',21)),i("p",null,[e[3]||(e[3]=t("Whether the web preview,download and the direct link go through the transfer. If you open this, recommended you set ")),n(h,{to:"/config/configuration.html#site_url"},{default:s(()=>e[2]||(e[2]=[t("site_url")])),_:1,__:[2]}),e[4]||(e[4]=t(" so that alist can works fine."))]),e[16]||(e[16]=a('<hr><ul><li>Web proxy Strategies ：It is a strategy when using the webpage. The default is a local agent. If you fill in the proxy URL and enable the web agent to use the proxy URL</li><li>Webdav policy Strategies：It is an option to use the webdav function <ul><li>If there are 302 options default to 302, if there is no 302 option default to the local agent, if you want to use the agent URL, please fill in and manually switch to the proxy URL strategy</li></ul></li></ul><p>The two are different configurations</p><br><h2 id="webdav-policy" tabindex="-1"><a class="header-anchor" href="#webdav-policy"><span><strong>Webdav policy</strong></span></a></h2><ul><li>302 redirect: redirect to the real link</li><li>use proxy URL: redirect to proxy URL</li><li>native proxy: return data directly through local transit(best compatibility)</li></ul><hr><ul><li>302 redirect：Although it does not consume traffic, it is not recommended to share and use it.</li><li>use proxy URL：It will consume the traffic of the agent URL</li><li>native proxy：The traffic of the construction of Alist device will consume</li></ul><h3 id="description-of-three-modes" tabindex="-1"><a class="header-anchor" href="#description-of-three-modes"><span><strong>Description of three modes</strong></span></a></h3>',9)),n(l,{id:"flowchart-195",code:"eJwztLUrLkksKrFSSM7JL01RSMkszuYysrVLzUuxUqjML+VSUOAy1CjKTM8o0dS1M+ICAHhNDlc=",preset:"vue"}),n(l,{id:"flowchart-196",code:"eJwzNLS1Ky5JLCqxUkjOyS9NUUjJLM7mMjKytcsvSC1KLMnMz7NSSMkvz8vJT0xRKCjKr6hUCA3ysbJThgnqggV1S4tyuIyNbe1S81KsFCrzS7kUuAwNNYoy0zNKNHXtjIzgTGNjLgApRCYC",preset:"vue"}),n(l,{id:"flowchart-197",code:"eJw9xjEOgCAMAMC9r+iogwOwkcBfCFQlEmpKMfH3bm5nTIhDk6jH3HgWLHVcYG2IfJMkrdw9DpKHBBvn1FAl9bGTgHMhUi8eX56AYMwi9Th13aK1P52DD3o7H5o=",preset:"vue"}),e[17]||(e[17]=i("br",null,null,-1)),e[18]||(e[18]=i("h2",{id:"download-proxy-url",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#download-proxy-url"},[i("span",null,"Download proxy URL")])],-1)),e[19]||(e[19]=i("p",null,"When the proxy is turned on without filling in this field, the local machine will be used for transfer by default.Two proxy methods are provided:",-1)),n(u,{id:"205",data:[{id:"cloudflare workers"},{id:"Universal Binary"}]},{title0:s(({value:o,isActive:d})=>e[5]||(e[5]=[t("cloudflare workers")])),title1:s(({value:o,isActive:d})=>e[6]||(e[6]=[t("Universal Binary")])),tab0:s(({value:o,isActive:d})=>e[7]||(e[7]=[i("p",null,[t("You can use "),i("code",null,"cloudflare workers"),t(" for proxy, just fill in the "),i("code",null,"cloudflare workers"),t(" address here."),i("br"),t(" The workers code can be found at "),i("a",{href:"https://github.com/OpenListTeam/alist-proxy/blob/main/alist-proxy.js",target:"_blank",rel:"noopener noreferrer"},"https://github.com/OpenListTeam/alist-proxy/blob/main/alist-proxy.js"),t(". in:")],-1),i("ul",null,[i("li",null,[t("ADDRESS: your Alist address, The protocol header must be added, and cannot be followed by /. Such as "),i("code",null,"https://pan.example.com"),t(";")]),i("li",null,[t("TOKEN: you can get in "),i("code",null,"Other settings"),t(" in your Alist manage page;")]),i("li",null,[t("WORKER_ADDRESS: your worker address, which should normally be same as "),i("strong",null,"Download proxy URL"),t(".")])],-1),i("p",null,[t("⚠️ Cloudflare Workers free CDN only supports (regardless of domestic or foreign) "),i("strong",null,"http80 port"),t(" and "),i("strong",null,"https443 port"),t(", from group friend test")],-1),i("ul",null,[i("li",null,[t("When mounting the configuration in the Alist background, fill in the "),i("strong",null,"download proxy URL"),t(" at the end of the link without "),i("code",null,"/")])],-1),i("p",null,[t("If you do n’t understand "),i("a",{href:"https://anwen-anyi.github.io/index/11-durl.html",target:"_blank",rel:"noopener noreferrer"},[i("strong",null,"Disassembled for details")])],-1)])),tab1:s(({value:o,isActive:d})=>e[8]||(e[8]=[i("p",null,[t("You can also use another machine for proxying, download the program at "),i("a",{href:"https://github.com/alist-org/alist-proxy/releases",target:"_blank",rel:"noopener noreferrer"},"https://github.com/alist-org/alist-proxy/releases")],-1),i("p",null,[i("code",null,"./alist-proxy -help"),t(" to see how to use it.")],-1),i("p",null,[t("If you don’t understand, there are detailed "),i("a",{href:"https://www.bilibili.com/video/BV17N411S7fg/",target:"_blank",rel:"noopener noreferrer"},[i("strong",null,"video tutorial")])],-1)])),_:1}),e[20]||(e[20]=a('<p>You can even develop your own proxy program, the general steps are:</p><ul><li>When downloading, it will request <code>PROXY_URL/path?sign=sign_value</code></li><li>Verify sign in the proxy program, the calculation method of sign is:</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> to_sign</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> `</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">expireTimeStamp</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> _sign</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> safeBase64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hmac_sha256</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">to_sign</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">TOKEN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> sign</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> `</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">_sign</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">expireTimeStamp</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3)),i("p",null,[e[10]||(e[10]=t("The ")),e[11]||(e[11]=i("code",null,"TOKEN",-1)),e[12]||(e[12]=t(" is the ")),n(h,{to:"/config/other.html#token"},{default:s(()=>e[9]||(e[9]=[t("token")])),_:1,__:[9]}),e[13]||(e[13]=t(" of admin user."))]),e[21]||(e[21]=a('<ul><li>After verifying the sign is correct, requesting <code>HOST/api/fs/link</code>, you can get the URL of the file and the request header to be carried</li><li>Use the information to request and return</li></ul><br><h2 id="sort-related" tabindex="-1"><a class="header-anchor" href="#sort-related"><span>Sort related</span></a></h2><ul><li>Sort by: Sort by what</li><li>Sort direction: Whether the sort direction is ascending or descedning</li></ul><div class="hint-container info"><p class="hint-container-title">Info</p><p>Some drives use their own sorting method, which may be different.</p></div><br><h2 id="extract-folder" tabindex="-1"><a class="header-anchor" href="#extract-folder"><span>Extract folder</span></a></h2><ul><li>Extract to front: put all folders to the front when sorting</li><li>Extract to back: put all folders to the back when sorting</li></ul>',8))])}const S=k(b,[["render",w]]),B=JSON.parse('{"path":"/guide/drivers/common.html","title":"Common","lang":"en-US","frontmatter":{"icon":"iconfont icon-state","order":1,"category":["Guide"],"tag":["Storage","Guide"],"sticky":true,"star":true},"headers":[{"level":2,"title":"Mount Path","slug":"mount-path","link":"#mount-path","children":[]},{"level":2,"title":"Order","slug":"order","link":"#order","children":[]},{"level":2,"title":"Remark","slug":"remark","link":"#remark","children":[{"level":3,"title":"Reference","slug":"reference","link":"#reference","children":[]}]},{"level":2,"title":"Enable signing","slug":"enable-signing","link":"#enable-signing","children":[]},{"level":2,"title":"Disable index","slug":"disable-index","link":"#disable-index","children":[{"level":3,"title":"Cache Expiration","slug":"cache-expiration","link":"#cache-expiration","children":[]}]},{"level":2,"title":"Web proxy","slug":"web-proxy","link":"#web-proxy","children":[]},{"level":2,"title":"Webdav policy","slug":"webdav-policy","link":"#webdav-policy","children":[{"level":3,"title":"Description of three modes","slug":"description-of-three-modes","link":"#description-of-three-modes","children":[]}]},{"level":2,"title":"Download proxy URL","slug":"download-proxy-url","link":"#download-proxy-url","children":[]},{"level":2,"title":"Sort related","slug":"sort-related","link":"#sort-related","children":[]},{"level":2,"title":"Extract folder","slug":"extract-folder","link":"#extract-folder","children":[]}],"git":{"createdTime":1662556125000,"updatedTime":1749716087000,"contributors":[{"name":"Noah Hsu","username":"Noah Hsu","email":"i@nn.ci","commits":9,"url":"https://github.com/Noah Hsu"},{"name":"安稳","username":"安稳","email":"56105412+anwen-anyi@users.noreply.github.com","commits":10,"url":"https://github.com/安稳"},{"name":"Andy Hsu","username":"Andy Hsu","email":"i@nn.ci","commits":2,"url":"https://github.com/Andy Hsu"},{"name":"安稳","username":"安稳","email":"anwen_anyi@foxmail.com","commits":3,"url":"https://github.com/安稳"},{"name":"sigvoid","username":"sigvoid","email":"easlandll@gmail.com","commits":1,"url":"https://github.com/sigvoid"},{"name":"MadDogOwner","username":"MadDogOwner","email":"xiaoran@xrgzs.top","commits":1,"url":"https://github.com/MadDogOwner"},{"name":"Hantong Chen","username":"Hantong Chen","email":"cxwdyx620@gmail.com","commits":2,"url":"https://github.com/Hantong Chen"}]},"readingTime":{"minutes":3.14,"words":943},"filePathRelative":"guide/drivers/common.md","localizedDate":"September 7, 2022"}');export{S as comp,B as data};
